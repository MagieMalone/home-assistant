group:
  sk_spot:
    entities: light.sk_spot_1, light.sk_spot_2
  switch-wk:
    entities:  switch.media_la_switch, switch.media_ra_switch, switch.media_v_switch
  lampen:
    entities: light.computer, light.eettafel, light.hal, light.trap_hal, light.hue_lightstrip_plus_1, light.overloop, light.slaapkamer, light.staande_lamp, light.sk_spot_1, light.sk_spot_2, light.keuken_1, light.keuken_2, light.keuken_3
  motion_sensors:
    entities: binary_sensor.0x00158d0002b5d42f_occupancy, binary_sensor.0x00158d0002b7eda4_occupancy, binary_sensor.0x00158d0002b8586b_occupancy





input_number:
  lightlevel:
    name: light level for motion sensors
    min: 0
    max: 200
    step: 5
    unit_of_measurement: lx


binary_sensor:
# custom hue component
  - platform: huesensor
remote:
#custom hue component
  - platform: huesensor
#light:
#  - platform: rflink
#    automatic_add: true
script:
  flash_lights:
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: >
            {% for device in dict(states.light|groupby("state"))["on"] %}
              {%- if device.entity_id |regex_match('.*onoff')  %}
              {%- else %}
                {%- if loop.first %}{% else %}, {% endif %}
                {{- device.entity_id | lower }}
              {%- endif %}
                {%- if loop.last %}{% endif %}
            {%-  endfor  %}
          flash: long



  turn_on_light:
    fields:
      light_entities:
        description: 'Light entity_ids'
        example: 'light.overloop'
      kelvin:
        description: 'color temp in kelvin'
        example: 5000
      brightness_pct:
        description: 'brightness in %'
        example: 75
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: "{{light_entities}}"
          transition:  5
          brightness_pct: >
            {% if is_state('input_select.house_mode', 'overdag') %}
              75
            {% elif is_state('input_select.house_mode', 'avond') %}
              50
            {% elif is_state('input_select.house_mode', 'nacht') %}
              1
            {% else %}
              {% if brightness_pct %}
                {{brightness_pct}}
              {% else %}
                100
              {% endif %}
            {% endif %}
          kelvin: >
            {% if kelvin %}
              {{kelvin | int}}
            {% else %}
              3000
            {% endif %}

  turn_on_colorlight:
    fields:
      light_entities:
        description: 'Light entity_ids'
        example: 'light.overloop'
      xy_color:
        description: 'xy color pair'
        example: '[0.5, 0.5]'
      
    sequence:
#      - service: notify.pushover
#        data_template:
#          message: >
#              entity: "{{light_entities}}"
#              xy_color:  "{{xy_color}}"
#              0: "{{xy_color[0]|float}}"
#              1: "{{xy_color[1]|float}}"
      - service: light.turn_on
        data_template:
          entity_id: "{{light_entities}}"
          transition: 5
          brightness_pct: >
            {% if brightness_pct %}
              {{brightness_pct}}
            {% else %}
              30
            {% endif %}
          xy_color: >
            {% if xy_color %}
              [ {{xy_color[0]|float}}, {{xy_color[1]|float}}]
            {% else %}
              [0.5, 0.5]
            {% endif %}


  turn_off_light:
    fields:
      light_entities:
        description: 'Light entity_ids'
        example: 'light.overloop'
    sequence:
      - service: light.turn_off
        data_template:
          entity_id: "{{light_entities}}"
          transition: 5

  dim_light:
    fields:
      light_entity:
        description: 'Light entity_id'
        example: 'light.overloop'
    sequence:
      - service: homeassistant.turn_on
        data_template:
          entity_id: "{{light_entity}}"
          transition: 1
          brightness: >
            {% set brightness = state_attr(light_entity, 'brightness') %}
            {%if brightness == None %}
              31
            {% else %}
              {% if brightness < 224 %}
                {{( brightness+32)|min(255)}}
              {% else %}
                31
              {% endif %}
            {% endif %}
      - service: script.dim_light_loop
        data_template:
          light_entity: "{{light_entity}}"

  dim_light_loop:
    fields:
      light_entity:
        description: 'Light entity_id'
        example: 'light.overloop'
    sequence:
      - delay: '00:00:01'
      - service: script.dim_light
        data_template:
          light_entity: "{{light_entity}}"
  update_lights_brightness:
    fields:
      brightness_pct:
        description: 'brightness in %'
        example: 75
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: >
            {% for device in dict(states.light|groupby("state"))["on"] %}
              {%- if device.entity_id |regex_match('.*onoff')  %}
              {%- else %}
                {%- if loop.first %}{% else %}, {% endif %}
                {{- device.entity_id | lower }}
              {%- endif %}
                {%- if loop.last %}{% endif %}
            {%-  endfor  %}
          brightness_pct: >
            {% if brightness_pct %}
              {{brightness_pct}}
            {% else %}
              100
            {% endif %}
          transition: 60
automation:
  - alias: 'lights off when leaving'
    id: '782368093283658209'
    trigger:
      - platform: state
        entity_id: input_select.arnoud_status
        to: 'Net Weg'
    action:
      - service: light.turn_off
        entity_id: group.lampen

  - alias: 'sunrise lights off'
    id: '47893265301237' 
    trigger: 
      platform: sun
      event: sunrise
      offset: '00:20:00'
    action:
      - service: light.turn_off
        entity_id: group.lampen

  - alias: 'lights off weekdays'
    id: '1528912303194'
    trigger:
      - platform: template
        value_template: >
          {% if states('sensor.wakeuplight_time') == None %}
            False
          {% else %}
            {{(as_timestamp(strptime(states('sensor.wakeuplight_time'), '%m/%d/%y %H:%M')) - (6*3600+900))| timestamp_custom('%D %H:%M') == now().strftime('%D %H:%M')}}
          {% endif %}
    action:
      - service: light.turn_off
        data:
          transition: 900 
          entity_id: group.lampen

  - alias: 'lights off weekenddays'
    id: '1528912303472'
    trigger:
      - at: '23:59'
        platform: time
    condition:
      condition: state
      entity_id: 'binary_sensor.workday1d'
      state: 'off'
    action:
      - service: light.turn_off
        data:
          transition: 900
          entity_id: group.lampen

  - alias: 'dim lights in day'
    id: '54618293609860132486029'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: 'overdag'
    condition: 
      condition: state
      entity_id: group.lampen
      state: 'on'
    action:
      - service: script.update_lights_brightness
        data:
          brightness_pct: 75

  - alias: 'dim lights in avond'
    id: '235689056329850982360158'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: 'avond'
    condition: 
      condition: state
      entity_id: group.lampen
      state: 'on'
    action:
      - service: script.update_lights_brightness
        data:
          brightness_pct: 50

  - alias: 'dim lights in nacht'
    id: '56132890612345689532108'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: 'nacht'
    condition: 
      condition: state
      entity_id: group.lampen
      state: 'on'
    action:
      - service: script.update_lights_brightness
        data:
          brightness_pct: 1

          


#######################################        
#       Motion sensors on             #
#######################################
  - alias: 'motion sensor mqtt overloop'
    id: '467606384609869894109134'
    trigger: 
      platform: state
      entity_id: binary_sensor.0x00158d0002b7eda4_occupancy
      from: 'off'
      to: 'on'  
    condition:
      - condition: template
        value_template: "{{(state_attr(trigger.entity_id, 'illuminance') |float)< (states('input_number.lightlevel')|float)}}"
      - condition: state
        entity_id: input_boolean.cleaningmode
        state: 'off'
    action:
      - service: script.turn_on_light
        data:
          light_entities: light.overloop
  - alias: 'motion sensor mqtt traphal'
    id: '47808636478871347896'
    trigger: 
      platform: state
      entity_id: binary_sensor.0x00158d0002b8586b_occupancy
      from: 'off'
      to: 'on'  
    condition:
      - condition: template
        value_template: "{{(state_attr(trigger.entity_id, 'illuminance') |float)< (states('input_number.lightlevel')|float) }}"
      - condition: state
        entity_id: input_boolean.cleaningmode
        state: 'off'
    action:
      - service: script.turn_on_light
        data:
          light_entities: light.trap_hal
  - alias: 'motion sensor mqtt hal'
    id: '567327632089382383432489065'
    trigger: 
      platform: state
      entity_id: binary_sensor.0x00158d0002b5d42f_occupancy
      from: 'off'
      to: 'on'  
    condition:
      - condition: template
        value_template: "{{(state_attr(trigger.entity_id, 'illuminance') |float)< (states('input_number.lightlevel')|float)}}"
      - condition: state
        entity_id: input_boolean.cleaningmode
        state: 'off'
    action:
      - service: script.turn_on_light
        data:
          light_entities: light.hal

#######################################        
#       Motion sensors off            #
#######################################


  - alias: 'motion sensor light off'
    id: '432174083284601304'
    trigger: 
      platform: state
      entity_id: binary_sensor.0x00158d0002b5d42f_occupancy, binary_sensor.0x00158d0002b7eda4_occupancy, binary_sensor.0x00158d0002b8586b_occupancy
      from: 'on'
      to: 'off'
    condition:
      condition: state
      entity_id: input_boolean.cleaningmode
      state: 'off'
    action:
      service: light.turn_off
      data_template:
        entity_id: >
            {% if trigger.entity_id == 'binary_sensor.0x00158d0002b5d42f_occupancy' %}
            light.hal
            {% elif trigger.entity_id == 'binary_sensor.0x00158d0002b8586b_occupancy' %}
            light.trap_hal
            {% elif trigger.entity_id == 'binary_sensor.0x00158d0002b7eda4_occupancy' %}
            light.overloop
            {% else %}
            light.computer
            {% endif %}
        transition: 5



