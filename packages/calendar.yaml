google:
  client_id: 836630737755-pr91j52c6n1700mvlsu5tn3tn4maoel6.apps.googleusercontent.com
  client_secret: !secret google_cal_apikey

input_boolean:
  f1_announcements:
    name: announce F1 races
input_datetime:
  pre_heat_time:
    name: Input with both date and time
    has_date: true
    has_time: true
  bedtime:
    name: bedtime
    has_date: true
    has_time: true
  wakeuptime:
    name: wakeuptime
    has_date: true
    has_time: true
  wakeuplight_time:
    name: alarmtime
    has_date: true
    has_time: true
#camera:
#  - platform: generic
#    name: Destination
#    still_image_url: "{{'https://maps.googleapis.com/maps/api/staticmap?key=' + states('sensor.google_api_key') + '&center=' + state_attr('calendar.abuurmangmailcom', 'location')+ '&zoom=17&size=600x300&maptype=roadmap&markers=color:blue%7C' + state_attr('calendar.abuurmangmailcom', 'location')}}"
#    limit_refetch_to_url_change: true

sensor:
  - platform: time_date
    display_options:
      - "time"
template:
  - sensor:
      - name: cal_travelmode
        unique_id: "69d11577-e8da-45fb-a986-b8ba9d898b31"
        state: >-
          {% if '#ov' in state_attr('calendar.abuurmangmailcom', 'message') %}
            transit
          {% else %}
            driving
          {% endif %}
      - name: cal_location
        unique_id: "77f75bb5-7cee-4eb1-b423-da10ab4f6b3e"
        state: >
          {% if is_state_attr('calendar.abuurmangmailcom', 'location', '') or is_state_attr('calendar.abuurmangmailcom', 'location', 'unknown') %}
            {{states('input_text.home_address')}}
          {% else %}
            {{ state_attr('calendar.abuurmangmailcom', 'location') }}
          {% endif %}
      - name: cal_location_alarm
        unique_id: "ca48506b-d62b-4be4-839d-d2c32bfe3cfd"
        state: >
          {% if is_state_attr('calendar.alarm', 'location', '') or is_state_attr('calendar.alarm', 'location', 'unknown') %}
            {{state_attr('zone.home', 'latitude')}},{{state_attr('zone.home', 'longitude')}}
          {% else %}
            {{ state_attr('calendar.alarm', 'location') }}
          {% endif %}
      - name: cal_reminders_name
        unique_id: "9aa64b47-5434-4399-81a6-65c338bf6a5e"
        state: "{{ state_attr('calendar.reminders', 'message') | replace('#reminders', '')}}"
      - name: cal_reminders_date
        unique_id: "6e1e91bd-9fae-4723-8a28-a1adfd50de3e"
        device_class: "timestamp"
        state: "{{(state_attr('calendar.reminders', 'start_time')|as_datetime).astimezone()}}"
      - name: calc_leave_time
        unique_id: "73400fa8-6115-464b-9ab4-477661dbfada"
        device_class: "timestamp"
        state: >
          {%- set duration = state_attr('sensor.google_travel_time_driving', 'duration') %}
          {%- if state_attr('calendar.abuurmangmailcom', 'message')  is search('#bike', ignorecase=true) %}
            {%- if states('sensor.here_travel_time_bike') == None %}
              {%- set offset = timedelta(minutes=5) %}
            {%- else %}
              {%- set offset = timedelta(minutes=states('sensor.here_travel_time_bike')|int +5)  %}
            {%- endif %}
          {%- else %}
            {%- if duration == None %}
              {%- set offset = timedelta(minutes=5) %}
            {%-  else %}
              {%- if duration.split(' ')[2]==Null %}
                {%- set offset = timedelta(minutes=(duration.split(' ')[0])|int +5) %}
              {%- else %}
                {%- set offset = timedelta(hours=(duration.split(' ')[0])|int) + timedelta(minutes=(duration.split(' ')[2])|int +5) %}
              {%- endif %} 
            {%- endif %} 
          {%- endif %}
          {{- (state_attr('calendar.abuurmangmailcom', 'start_time')| as_datetime - offset).astimezone()}}
      - name: calc_leave_time_unix
        unique_id: "1977399f-e061-42ab-b9d0-6148723f13e7"
        state: >
          {% set tz = as_timestamp(now())|timestamp_custom('%z') %}
          {% set time = state_attr('calendar.abuurmangmailcom', 'start_time') + tz %}
          {% set starttime = as_timestamp(time) %}    
          {% set duration = state_attr('sensor.google_travel_time_driving', 'duration') %}
          {%if duration == None %}
            {{ starttime }}
          {% else %}
            {%if duration.split(' ')[2]==Null %}
              {{ (starttime  - (duration.split(' ')[0]  | int * 60 )) }}
            {% else %}
              {{ (starttime - (duration.split(' ')[0] | int *3600 + duration.split(' ')[2] | int *60 )) }}
            {% endif %} 
          {% endif %}
      - name: calc_leave_time_alarm
        unique_id: "e9dce637-9b57-4321-8b95-10e2b9e56411"
        device_class: "timestamp"
        state: >
          {%- set duration = state_attr('sensor.google_travel_time_alarm', 'duration') %}
          {%- if state_attr('calendar.alarm', 'message')  is search('#bike', ignorecase=true) %}
            {%- if states('sensor.here_travel_time_alarm_bike') == None %}
              {%- set offset = timedelta(minutes=0) %}
            {%- else %}
              {%- set offset = timedelta(minutes=states('sensor.here_travel_time_alarm_bike')|int) %}
            {%- endif %}
          {%- else %}
            {%- if duration == None %}
              {%- set offset = timedelta(minutes=0) %}
            {%-  else %}
              {%- if duration.split(' ')[2]==Null %}
                {%- set offset = timedelta(minutes=(duration.split(' ')[0])|int) %}
              {%- else %}
                {%- set offset = timedelta(hours=(duration.split(' ')[0])|int) + timedelta(minutes=(duration.split(' ')[2])|int) %}
              {%- endif %} 
            {%- endif %} 
          {%- endif %}
          {{- (state_attr('calendar.alarm', 'start_time')| as_datetime - offset).astimezone()}}
      - name: calc_afspraak_reistijd
        unique_id: "a3dad1d5-7a70-4121-832e-18332096ec71"
        unit_of_measurement: "minutes"
        state: >
          {%- if state_attr('calendar.abuurmangmailcom', 'message')  is search('#bike', ignorecase=true) %}
            {%- if states('sensor.here_travel_time_bike') == None %}
              {% set reistijd = 0 %}
            {%- else %}
              {% set reistijd = states('sensor.here_travel_time_bike')|int %}
            {%- endif %}
          {%- else %}
            {%- if states('sensor.calc_travel_time') == None %}
              {% set reistijd = 0 %}
            {%-  else %}
              {% set reistijd = states('sensor.calc_travel_time')|int /60 %}
            {%- endif %} 
          {%- endif %}
          {{reistijd }}
      - name: calc_alarm_reistijd
        unique_id: "d39554cb-d18c-437e-af87-05e629a864ed"
        unit_of_measurement: "minutes"
        state: >
          {%- if state_attr('calendar.alarm', 'message')  is search('#bike', ignorecase=true) %}
            {%- if states('sensor.here_travel_time_alarm_bike') == None %}
              {% set reistijd = 0 %}
            {%- else %}
              {% set reistijd = states('sensor.here_travel_time_alarm_bike')|int %}
            {%- endif %}
          {%- else %}
            {%- if states('sensor.calc_travel_time_alarm') == None %}
              {% set reistijd = 0 %}
            {%-  else %}
              {% set reistijd = states('sensor.calc_travel_time_alarm')|int /60 %}
            {%- endif %} 
          {%- endif %}
          {{reistijd }}
      - name: f1_start_event
        unique_id: "08d27902-9f4f-4919-937c-9e4bd0b9793c"
        device_class: "timestamp"
        state: >
          {% if state_attr('calendar.formula_1_calendar_by_racefans_net', 'start_time') == None %}
            False
          {% else %}
            {{(state_attr('calendar.formula_1_calendar_by_racefans_net', 'start_time')|as_datetime - timedelta(minutes=10)).astimezone()}}
          {% endif %}

automation:
  - alias: "vertrek melding"
    id: "567812438901831653879"
    trigger:
      platform: time
      at:
        - "sensor.calc_leave_time"
    condition:
      - alias: "more then 2 minutes?"
        condition: template
        value_template: >
          {%- if state_attr('calendar.abuurmangmailcom', 'message')  is search('#bike', ignorecase=true) %}
            {%- if states('sensor.here_travel_time_bike') == None %}
              {% set reistijd = 0 %}
            {%- else %}
              {% set reistijd = states('sensor.here_travel_time_bike')|int %}
            {%- endif %}
          {%- else %}
            {%- if states('sensor.calc_travel_time') == None %}
              {% set reistijd = 0 %}
            {%-  else %}
              {% set reistijd = states('sensor.calc_travel_time')|int /60 %}
            {%- endif %} 
          {%- endif %}
          {{reistijd > 2}}

    action:
      - alias: "Send TTS using Google Home Resume script"
        service: script.turn_on
        target:
          entity_id: script.google_home_resume
        data:
          variables:
            action:
              - alias: "Send TTS message"
                service: tts.google_say
                target:
                  entity_id: media_player.speakers
                data:
                  cache: false
                  language: "nl"
                  message: >
                    {% set reistijd = states('sensor.calc_travel_time') %}
                    {% set message = state_attr('calendar.abuurmangmailcom', 'message') | replace('#alarm', '')| replace('#bike', '') %}
                    {% if reistijd=='unknown' %} 
                      Het is tijd om naar {{message}} te gaan. De reistijd is onbekend.
                    {% else %}
                      Het is tijd om naar {{message}} te gaan. De reistijd bedraagt {{ reistijd | int /60 |round }} minuten.
                    {% endif %}
                    {% if is_state('group.windows_kachel', 'on') %}
                      Vergeet niet om de ramen te sluiten
                    {% endif %}
      - alias: "Wait until the target is idle or off before applying the volume for the TTS message"
        wait_template: "{{ states('media_player.speakers') in ['idle', 'off'] }}"
      - alias: "Apply TTS volume"
        service: media_player.volume_set
        target:
          entity_id: media_player.speakers
        data:
          volume_level: "{{states('input_number.tts_volume')| float}}"
  - id: '1654164134828'
    alias: alert for online event
    description: ''
    trigger:
    - platform: calendar
      event: start
      entity_id: calendar.online_events
    condition: 
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.arnoud_status
            state: "Thuis"
          - condition: state
            entity_id: input_select.arnoud_status
            state: "Net Thuis"
    action:
      - alias: "Send TTS using Google Home Resume script"
        service: script.turn_on
        target:
          entity_id: script.google_home_resume
        data:
          variables:
            action:
              - alias: "Send TTS message"
                service: tts.google_say
                target:
                  entity_id: media_player.speakers
                data:
                  message: "De {{state_attr('calendar.online_events', 'message')}} begint over vijf minuten"
                  cache: false
                  language: "nl"
      - alias: "Wait until the target is idle or off before applying the volume for the TTS message"
        wait_template: "{{ states('media_player.speakers') in ['idle', 'off'] }}"
      - alias: "Apply TTS volume"
        service: media_player.volume_set
        target:
          entity_id: media_player.speakers
        data:
          volume_level: "{{states('input_number.tts_volume')| float}}"

    mode: single
    
  - alias: "F1 begin wedstrijd"
    id: "3478021346858103290"
    trigger:
      platform: time
      at:
        - "sensor.f1_start_event"
    condition:
      - "{{not state_attr('calendar.formula_1_calendar_by_racefans_net','all_day') }}"
      - condition: state
        entity_id: input_boolean.f1_announcements
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.arnoud_status
            state: "Thuis"
          - condition: state
            entity_id: input_select.arnoud_status
            state: "Net Thuis"
    action:
      - alias: "Send TTS using Google Home Resume script"
        service: script.turn_on
        target:
          entity_id: script.google_home_resume
        data:
          variables:
            action:
              - alias: "Send TTS message"
                service: tts.google_say
                target:
                  entity_id: media_player.speakers
                data:
                  message: "De {{state_attr('calendar.formula_1_calendar_by_racefans_net', 'message')}} begint over tien minuten"
                  cache: false
                  language: "nl"
      - alias: "Wait until the target is idle or off before applying the volume for the TTS message"
        wait_template: "{{ states('media_player.speakers') in ['idle', 'off'] }}"
      - alias: "Apply TTS volume"
        service: media_player.volume_set
        target:
          entity_id: media_player.speakers
        data:
          volume_level: "{{states('input_number.tts_volume')| float}}"
      - service: homeassistant.turn_on
        target:
          entity_id: switch.media_group
  - alias: "set time input helpers"
    id: "4d6474f6-4a53-4c54-ae47-66326ad68133"
    trigger:
      - platform: state
        entity_id: sensor.calc_leave_time_alarm
      - platform: state
        entity_id: input_number.wul_time_before_leave
    variables:
      alarm_time: >
        {% if states('sensor.calc_leave_time_alarm') == 'unknown' %}
          {{ today_at("09:00") + timedelta(hours=24) }}
        {% else %}
          {{(states('sensor.calc_leave_time_alarm')|as_datetime - timedelta(minutes=(states('input_number.wul_time_before_leave')|int))).astimezone() }}
        {% endif %}
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.wakeuplight_time
        data:
          datetime: "{{alarm_time}}"
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.pre_heat_time
        data:
          datetime: "{{alarm_time|as_datetime - timedelta(minutes=30) }}"
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.bedtime
        data:
          datetime: "{{alarm_time|as_datetime - timedelta(hours=7, minutes=15)}}"
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.wakeuptime
        data:
          datetime: "{{alarm_time|as_datetime + timedelta(minutes=15)}}"

script:
  test_f1_announce:
    sequence:
      - service: tts.google_say
        target:
          entity_id: media_player.speakers
        data:
          message: >
            De {{state_attr('calendar.formula_1_calendar_by_racefans_net', 'message')}} begint over tien minuten
          cache: false
          language: "nl"
