#cast:
#  media_player:
#  - host: 192.168.3.198
#  - host: 192.168.1.194
#  - host: 192.168.1.132
#  - host: 192.168.1.239
#media_player:
#  - platform: samsungtv
#    host: 192.168.3.222
#    mac: 90:F1:AA:2A:59:50
#  - platform: songpal
#    name: soundbar
#    endpoint: http://192.168.3.152:10000/sony

input_select:
  cast_devices:
    name: select cast device
    options:
      - none
input_text:
  cast_selection:
    name: cast selection backup restore

automation:
  - alias: "Turn off mediacenter when leaving"
    id: "1528971801050"
    trigger:
      - platform: state
        entity_id: input_select.arnoud_status
        to: "Weg"
    action:
      - service: homeassistant.turn_off
        target:
          entity_id: light.media_group
  - alias: "Turn on mediacenter"
    id: "543216798041047810"
    trigger:
      - platform: time
        at: "16:00:00"
      - platform: state
        entity_id: input_select.arnoud_status
        to: "Net Thuis"
    condition:
      condition: and
      conditions:
        - condition: time
          after: "16:00:00"
          before: "23:59:59"
        - condition: or
          conditions:
            - condition: state
              entity_id: input_select.arnoud_status
              state: "Net Thuis"
            - condition: state
              entity_id: input_select.arnoud_status
              state: "Thuis"
    action:
      - service: homeassistant.turn_on
        target:
          entity_id: light.media_group

  - alias: "set input select cast devices based on sensor chromecast devices"
    id: "87582340659086321048961824360"
    trigger:
      - platform: state
        entity_id: sensor.chromecast_devices
    action:
      - service: input_text.set_value
        target:
          entity_id: input_text.cast_selection
        data:
          value: "{{ states('input_select.cast_devices') }}"
      #      - service: python_script.set_list_from_sensor
      #        data:
      #          sensor: 'sensor.chromecast_devices'
      #          input_select: 'input_select.cast_devices'
      - service: input_select.set_options
        target:
          entity_id: input_select.cast_devices
        data:
          options: "{{states.sensor.chromecast_devices.attributes.devices |map(attribute='name')|list}}"
      - service: input_select.select_option
        target:
          entity_id: input_select.cast_devices
        data:
          option: "{{ states('input_text.cast_selection') }}"

#
#sensor:
#  - platform: plex
#    host: 192.168.1.3
#    username: !secret plex_username
#    password: !secret plex_password
#    verify_ssl: false
#
script:
  start_media:
    alias: "Start media"
    fields:
      media_content_id:
        description: "Media content id"
        example: "https://foto-album.duckdns.org/local/audio/Door-bell-sound-ding-dong.mp3"
      media_content_type:
        description: "The type of the content to play. Must be one of image, music, tvshow, video, episode, channel or playlist	"
      entity_id:
        description: "Name(s) of entities to seek media on"
        example: "media_player.living_room_chromecast"
    sequence:
      - service: media_player.volume_mute
        target:
          entity_id: "{{entity_id}}"
        data:
          is_volume_muted: true
      - service: media_player.play_media
        target:
          entity_id: "{{entity_id}}"
        data:
          media_content_id: "https://foto-album.duckdns.org/local/audio/silence_64kb.mp3"
          media_content_type: "music"
      - service: media_player.volume_mute
        target:
          entity_id: "{{entity_id}}"
        data:
          is_volume_muted: false
      - service: media_player.play_media
        target:
          entity_id: "{{entity_id}}"
        data:
          media_content_id: "{{media_content_id}}"
          media_content_type: "{{media_content_type}}"
