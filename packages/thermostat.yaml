#toon:
#  client_id: !secret toon_consumer_key
#  client_secret: !secret toon_consumer_secret
climate:
  - platform: toon_climate
    name: Toon Thermostat
    host: !secret toon_ip
    port: 80
    scan_interval: 10
    min_temp: 6.0
    max_temp: 30.0
sensor:
  - platform: toon_smartmeter
    host: !secret toon_ip
    port: 80
    scan_interval: 5
    resources:
      - gasused
      - gasusedcnt
      - elecusageflowpulse
      - elecusagecntpulse
      - elecusageflowlow
      - elecusagecntlow
      - elecusageflowhigh
      - elecusagecnthigh
      - elecprodflowlow
      - elecprodcntlow
      - elecprodflowhigh
      - elecprodcnthigh
      - heat
      - elecsolar
      - elecsolarcnt
      - waterflow
      - waterquantity
      
  - platform: toon_boilerstatus
    name: Toon
    host: !secret toon_ip
    port: 80
    scan_interval: 10
    resources:
      - boilersetpoint
      - boilerintemp
      - boilerouttemp
      - boilerpressure
      - boilermodulationlevel
      - roomtemp
      - roomtempsetpoint
utility_meter:
  daily_energy_offpeak:
    source: sensor.toon_p1_power_use_cnt_low
    name: Daily Energy (Offpeak)
    cycle: daily
    unique_id: "a77273c9-d067-492b-8676-11873eb62672"
  daily_energy_peak:
    source: sensor.toon_p1_power_use_cnt_high
    name: Daily Energy (Peak)
    cycle: daily
    unique_id: "8d410996-ac41-4688-b9f9-fe84ac703c8c"
  daily_gas:
    source: sensor.toon_gas_used_cnt
    name: Daily Gas
    cycle: daily
    unique_id: "9040c422-e569-47bd-9996-97de7ae82702"
  daily_energy_offpeak_cost:
    source: sensor.toon_p1_power_use_cnt_low_cost_2
    name: Daily Energy (Offpeak)
    cycle: daily
    unique_id: "78f9d530-e57b-43ff-91a8-ee7aa148088b"
  daily_energy_peak_cost:
    source: sensor.toon_p1_power_use_cnt_high_cost_2
    name: Daily Energy (Peak)
    cycle: daily
    unique_id: "6294ab96-422a-49e3-b85e-37c00af94f56"
  daily_gas_cost:
    source: sensor.toon_gas_used_cnt_cost_2 
    name: Daily Gas
    cycle: daily
    unique_id: "5494f121-40c6-445b-82e8-80054e284c16"

input_select:
  heating:
    name: Heating options
    options:
      - sleep
      - home
      - comfort
      - away
    icon: mdi:fire

input_number:
  thermostat_set_point:
    name: Thermostaat
    min: 5
    max: 35
    initial: 15
    step: 0.5
    unit_of_measurement: °C
    icon: mdi:thermometer

template:
  - trigger:
    - platform: time_pattern
      hours: "0"
      minutes: "10"
    binary_sensor:
      - name: "workday_sensor_mod"
        unique_id: "c662b422-0024-46cb-b4d2-289a15a5dbef"
        # if workday and alarm before 8 o'clock then workday, otherwise it's vacation
        state: "{{states('binary_sensor.workday_sensor') and as_datetime(state_attr('calendar.alarm', 'start_time'))|as_local < today_at('8:00')}}"
  - sensor:
    - name: "heating_set_temperature"
      unique_id: "1394c112-73e9-4884-b8a3-6c01ce3e5d85"
      state: "{{state_attr('climate.toon_thermostat', 'temperature') | float }}"
      device_class: "temperature"
      unit_of_measurement: "°C"
    - name: "heating_current_temperature"
      unique_id: "1481a5b4-0950-4878-bddf-fabfb6bdc8db"
      state: "{{state_attr('climate.toon_thermostat', 'current_temperature') | float }}"
      device_class: "temperature"
      unit_of_measurement: "°C"
    - name: "heating_preset_mode"
      unique_id: "0f64357c-5e9d-4939-aa83-180eee53740d"
      state: "{{state_attr('climate.toon_thermostat', 'preset_mode')}}"
    - name: "toon_action"
      unique_id: "f35bbc32-e09b-418b-84cf-970d0378bf91"
      state: "{{state_attr('climate.toon_thermostat', 'hvac_action')}}"
    - name: "thermostat_condition"
      unique_id: "04b4cc23-5941-4fb4-901e-452e0fdb0153"
      state: >
        {% if is_state('sensor.buiten_temperature', 'unavailable') %}
          {{(states('sensor.knmi_max_temperature_today') |float ) <20}}
        {% else %}
          {% if is_state('sensor.woonkamer_temperature', 'unavailable') %}
            {{(states('sensor.buiten_temperature') |float ) <20  and (states('sensor.knmi_max_temperature_today') |float ) <20 }}
          {% else %}
            {{(( states('sensor.buiten_temperature')  )|float) < (( states('sensor.woonkamer_temperature') ) | float) and (states('sensor.buiten_temperature') |float ) <20  and (states('sensor.knmi_max_temperature_today') |float ) <20 }}
          {% endif %}
        {% endif %}
    - name: 'Daily Energy Total'
      device_class: energy
      unit_of_measurement: kWh
      unique_id: "eac068f5-42e9-480a-a643-ebe4589cb7aa"
      state: >
        {% if is_number(states('sensor.daily_energy_offpeak')) and is_number(states('sensor.daily_energy_peak')) %}
          {{ states('sensor.daily_energy_offpeak') | float + states('sensor.daily_energy_peak') | float }}
        {% elif is_number(states('sensor.daily_energy_offpeak')) %}
          {{ states('sensor.daily_energy_offpeak') | float}}
        {% elif is_number(states('sensor.daily_energy_peak')) %}
          {{ states('sensor.daily_energy_peak') | float}}
        {% else %}
          None
        {% endif %}
    - name: 'Daily Energy Total Cost'
      device_class: monetary
      unit_of_measurement: EUR
      unique_id: a43d4839-893d-43ae-afbd-1e01b834707d""
      state: >
        {% if is_number(states('sensor.daily_energy_offpeak_2')) and is_number(states('sensor.daily_energy_peak_2')) %}
          {{ states('sensor.daily_energy_offpeak_2') | float + states('sensor.daily_energy_peak_2') | float }}
        {% elif is_number(states('sensor.daily_energy_offpeak_2')) %}
          {{ states('sensor.daily_energy_offpeak_2') | float }}
        {% elif is_number(states('sensor.daily_energy_peak_2')) %}
          {{ states('sensor.daily_energy_peak_2') | float }}
        {% else %}
          None
        {% endif %}
timer:
  toon_automation:
    name: Time remaining
    duration: 120
automation:
  - alias: "kachel nieuw"
    id: "432578090243508970892435"
    mode: queued
    trigger:
      - platform: state
        entity_id: input_select.arnoud_status
        to: "Net Thuis"
      - platform: state
        entity_id: input_select.arnoud_status
        to: "Weg"
        for: "01:00:00"
      - platform: numeric_state
        entity_id: sensor.home_nearest_distance
        above: 11.8
        id: "proximity_above"
      - platform: numeric_state
        entity_id: sensor.home_nearest_distance
        below: 25
        id: "proximity_below"
      - platform: state
        entity_id: group.windows_kachel
        from: "off"
        to: "on"
        for: "00:05:00"
      - platform: state
        entity_id: person.arnoud
        from: "Action"
        for: "00:03:00"
        id: "leave_action"
      - platform: state
        entity_id: group.windows_kachel
        from: "on"
        to: "off"
      - platform: time
        at:
          - "08:00:00"
          - "09:00:00"
          - "23:00:00"
          - "21:30:00"
      - platform: time
        at:
          - input_datetime.pre_heat_time
        id: "pre_heat"
      - platform: state
        entity_id: sensor.thermostat_condition
    action:
      - choose:
          - conditions:
              condition: trigger
              id: "proximity_above"
            sequence:
              - alias: "zet kachel uit"
                service: script.kachel_mode
                data:
                  mode: "away"
          - conditions:
              condition: trigger
              id: "pre_heat"
            sequence:
              - condition: numeric_state
                entity_id: sensor.badkamer_temperature
                below: 20
              - alias: "raam dicht?"
                condition: state
                entity_id: binary_sensor.badkamer_raam_contact
                state: "off"
              - alias: "zet kachel aan"
                service: script.kachel_mode
                data:
                  mode: "comfort"
              - wait_for_trigger:
                  platform: numeric_state
                  entity_id: sensor.badkamer_temperature
                  above: 20
                timeout: "00:30:00"
              - alias: "zet kachel uit"
                service: script.kachel_mode
                data:
                  mode: "sleep"
          - conditions:
              - and:
                - condition: state
                  entity_id: sensor.thermostat_condition
                  state: "True"
                - condition: state
                  entity_id: group.windows_kachel
                  state: "off"
                - or:
                  - and:
                    - condition: time
                      after: "07:59:59"
                      before: "21:00:00"
                    - condition: state
                      entity_id: binary_sensor.workday_sensor_mod
                      state: "on"
                  - and:
                    - condition: time
                      after: "08:59:59"
                      before: "22:00:00"
                    - condition: state
                      entity_id: binary_sensor.workday_sensor_mod
                      state: "off"
                - or:
                  - condition: state
                    entity_id: input_select.arnoud_status
                    state: "Thuis"
                  - condition: state
                    entity_id: input_select.arnoud_status
                    state: "Net Thuis"
                  - condition: trigger
                    id: "proximity_below"
                  - condition: trigger
                    id: "action_leave"
            sequence:
              - alias: "zet kachel aan"
                service: script.kachel_mode
                data:
                  mode: "home"
          - conditions:
              - and:
                - condition: state
                  entity_id: binary_sensor.workday1d
                  state: "on"
                - condition: time
                  after: "21:29:59"
            sequence:
              - choose: 
                  - conditions:
                      - condition: state
                        entity_id: climate.toon_thermostat
                        state: "unavailable"
                    sequence:
                      - alias: "melding op speakers"
                        service: script.turn_on
                        target:
                          entity_id: script.google_home_resume
                        data:
                          variables:
                            action:
                              - alias: "cloud tts"
                                service: tts.cloud_say
                                data:
                                  entity_id: media_player.speakers
                                  message: "Toon van Eneco heeft een storing, vergeet niet de kachel uit te doen"
                                  options:
                                    voice: FennaNeural
                                  language: "nl-NL"
                                  cache: true
                      - alias: "Wait until the target is idle or off before applying the volume for the TTS message"
                        wait_template: "{{ states('media_player.speakers') in ['idle', 'off'] }}"
                      - alias: "Apply TTS volume"
                        service: media_player.volume_set
                        target:
                          entity_id: media_player.speakers
                        data:
                          volume_level: "{{states('input_number.tts_volume')| float}}"
                default:
                  - alias: "zet kachel uit"
                    service: script.kachel_mode
                    data:
                      mode: "sleep"
        default:
          - choose: 
              - conditions:
                  - condition: state
                    entity_id: climate.toon_thermostat
                    state: "unavailable"
                sequence:
                  - alias: "check if it's not too late or too early"
                    condition: state
                    entity_id: schedule.tts_announce
                    state: "on"
                  - alias: "melding op speakers"
                    service: script.turn_on
                    target:
                      entity_id: script.google_home_resume
                    data:
                      variables:
                        action:
                          - alias: "cloud tts"
                            service: tts.cloud_say
                            data:
                              entity_id: media_player.speakers
                              message: "Toon van Eneco heeft een storing, vergeet niet de kachel uit te doen"
                              options:
                                voice: FennaNeural
                              language: "nl-NL"
                              cache: true
                  - alias: "Wait until the target is idle or off before applying the volume for the TTS message"
                    wait_template: "{{ states('media_player.speakers') in ['idle', 'off'] }}"
                  - alias: "Apply TTS volume"
                    service: media_player.volume_set
                    target:
                      entity_id: media_player.speakers
                    data:
                      volume_level: "{{states('input_number.tts_volume')| float}}"
            default:
              - alias: "zet kachel uit"
                service: script.kachel_mode
                data:
                  mode: "sleep"

  ########################
  ##
  ## keep state between Toon and inputs
  ##
  ########################

  - alias: "zet heating input select based on toon output"
    id: "32847030987420324"
    trigger:
      platform: state
      entity_id: sensor.heating_preset_mode
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: sensor.heating_preset_mode
          state: sleep
        - condition: state
          entity_id: sensor.heating_preset_mode
          state: home
        - condition: state
          entity_id: sensor.heating_preset_mode
          state: comfort
        - condition: state
          entity_id: sensor.heating_preset_mode
          state: away
    action:
      - service: input_select.select_option
        target:
          entity_id: input_select.heating
        data:
          option: "{{states('sensor.heating_preset_mode')}}"
  - alias: "zet toon based on heating input select"
    id: "3098476890309834039342"
    trigger:
      platform: state
      entity_id: input_select.heating
    condition:
      condition: state
      entity_id: timer.toon_automation
      state: idle
    action:
      - service: climate.set_preset_mode
        target:
          entity_id: climate.toon_thermostat
        data:
          preset_mode: "{{states('input_select.heating')}}"
  - alias: "zet toon thermostaat based on input value"
    id: "98487940987349821"
    trigger:
      platform: state
      entity_id: input_number.thermostat_set_point
    condition:
      condition: and
      conditions:
        - "{{ ( states('input_number.thermostat_set_point')  ) != ( states('sensor.heating_set_temperature') ) }}"
        - condition: state
          entity_id: timer.toon_automation
          state: idle
    action:
      - service: climate.set_temperature
        target:
          entity_id: climate.toon_thermostat
        data:
          temperature: "{{states('input_number.thermostat_set_point')}}"
  - alias: "zet thermostaat input value based on toon"
    id: "230983248701908743"
    trigger:
      platform: state
      entity_id: sensor.heating_set_temperature
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.thermostat_set_point
        data:
          value: "{{ states('sensor.heating_set_temperature') }}"
script:
  kachel_mode:
    fields:
      mode:
        description: "Kachel mode"
        example: "away"
    sequence:
      - service: timer.start
        target:
          entity_id: timer.toon_automation
      - repeat:
          sequence:
            - alias: "zet kachel mode"
              service: climate.set_preset_mode
              target:
                entity_id: climate.toon_thermostat
              data:
                preset_mode: "{{ mode }}"
            - delay:
                seconds: 30
          until: 
            - or:
              - "{{ is_state('sensor.heating_preset_mode', mode ) }}"
              - condition: state
                entity_id: timer.toon_automation
                state: idle
